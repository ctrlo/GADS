[%
  PROCESS snippets/datum.tt;

  IF NOT record.new_entry;
    cur_id = record.current_id;
  END;
%]

<div class="content-block__main">
  <form
    class="[% IF edit_modal %]curval-edit-form[% ELSE %]form-edit[% END %]"
    method="post"
    enctype="multipart/form-data"
    [%
      IF edit_modal;
        action = cur_id
          ? url.page _ "/record/" _ cur_id
          : url.page _ "/" _ layout.identifier _ "/record/";
    %]
        action="[% action %]" [%# This form also used for bulk actions %]
        data-curval-id="[% edit_modal %]"
        data-current-id="[% cur_id %]"
        data-modal-field-ids="[% modal_field_ids %]"
        data-instance-name="[% layout.identifier %]"
    [% END; %]
    >
    [%
      INCLUDE fields/hidden.tt name="csrf_token" value=csrf_token;
      
      IF submission_token;
        INCLUDE fields/hidden.tt name="submission_token" value=submission_token;
      END;
  
      IF cur_id;
        INCLUDE fields/hidden.tt name="current_id" value=record.current_id;
      END;
  
      IF child;
        INCLUDE fields/hidden.tt name="child" value=child;
      END;
    %]
    [% IF edit_modal %]
        <div role="alert" class="alert alert-danger" hidden></div>
    [% END %]
    <fieldset class="fieldset">
      <div class="fieldset__legend fieldset__legend--hidden">
        <legend>
          [% page_title | html %]
        </legend>
      </div>
    
      <div class="content-block__main-content">
        <div class="row">
          [% IF NOT record.new_entry AND NOT edit_modal AND NOT view_modal %]
          <div class="content-block__left col-lg-4 mb-3 mb-lg-0">
            [% IF record.child_record_ids.size %]
            <div class="card card--header">
              <h3 class="card__header">
                <span>Child records</span>
              </h3>
    
              <div class="card__body row">
                <div class="card__content">
                  <div class="list list--vertical list--key-value list--no-borders">
                    <ul class="list__items">
                      [% FOREACH rec IN record.child_record_ids %]
                      <li class="list__item ">
                        <a class='link link--plain' href='[% url.page %]/record/[% rec %]'>
                          [% rec %]
                        </a>
                      </li>
                      [% END %]
                    </ul>
                  </div>
                </div>
              </div>
            </div>
            [% END %]
            
            <div class="card card--header">
              <h3 class="card__header">
                <span>Meta data</span>
              </h3>
              
              <div class="card__body row">
                <div class="card__content">
                  <div class="list list--vertical list--key-value list--no-borders">
                    <ul class="list__items">
                      <li class="list__item ">
                        <span class="list__key">Last edited by</span>
                        <span class="list__value">
                          <div class="d-flex position-relative">
                            [%
                              FOR person IN record.version_user.data.details;
                                render_person_datum(person);
                              END;
                            %]
                          </div>
                        </span>
                      </li>
            
                      <li class="list__item ">
                        <span class="list__key">Last edited time</span>
                        <span class="list__value">[% record.version_datetime.data.value | html %]</span>
                      </li>
                    </ul>
                  </div>
        
                  <div class="list list--vertical list--key-value list--no-borders">
                    <ul class="list__items">
                      <li class="list__item ">
                        <span class="list__key">Created by</span>
                        <span class="list__value">
                          <div class="d-flex position-relative">
                            [%
                              FOR person IN record.created_user.data.details;
                                render_person_datum(person);
                              END;
                            %]
                          </div>
                        </span>
                      </li>
            
                      <li class="list__item ">
                        <span class="list__key">Created time</span>
                        <span class="list__value">[% record.created_datetime.data.value | html %]</span>
                      </li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
  
            <div class="card card--header">
              <h3 class="card__header">
                <span>Version history</span>
              </h3>
    
              <div class="card__body row">
                <div class="card__content">
                  <div class="row mb-2">
                    <div class="col">
                      <a class="btn btn-link" href="[% url.page %]/chronology/[% record.current_id %]">View chronology</a>
                    </div>
                  </div>
                  <div class="row">
                    <div class="col">
                      <div class="collapsible-dropdown">
                        [%
                          dropdown_title = "Select version...";
                        
                          FOREACH version IN record.versions;
                            IF version.id == record.record_id;
                              dropdown_title = version.created;
                            END;
                          END;
                        %]
                        <button class="collapsible__toggle" type="button" data-toggle="collapse" data-target="#dropdown" aria-expanded="false" aria-controls="collapseExample">
                          <span> [% dropdown_title %] </span>
                        </button>
                        <div class="collapse" id="dropdown">
                          <div class="collapsible-dropdown__content">
                            <div class="dropdown__group">
                              <ul class="dropdown__list" role="listbox" aria-labelledby="dropdown">
                                [%
                                  history_link = record.deleted ? "purgehistory" : "history";
                                
                                  FOREACH version IN record.versions;
                                %]
                                <li class="dropdown__item" role="option">
                                  <a
                                    class='link link--plain[% IF version.id == record.record_id %] link--active[% END %]'
                                    href='/[% history_link %]/[% version.id %]'
                                  >
                                    [%
                                      version.created;
                                      IF version.createdby;
                                    %]
                                      ([% version.createdby.value | html %])
                                    [% END %]
                                  </a>
                                </li>
                                [% END %]
                              </ul>
                            </div>
                
                
                          </div>
                        </div>
                      </div>
          
                    </div>
                  </div>
      
                </div>
    
              </div>
            </div>
  
            [% IF record.has_rag_column %]
            <div class="card card--header">
              <h3 class="card__header">
                <span>Legend</span>
              </h3>
    
              <div class="card__body row">
                <div class="card__content">
                  [% INCLUDE snippets/rag_legend.tt %]
                </div>
              </div>
            </div>
            [% END %]
          </div>
          [% END %]
          
          <div class="content-block__right col-lg-[% IF record.new_entry OR edit_modal OR view_modal %]12[% ELSE %]8[% END %]">
            [% PROCESS form %]
          </div>
        </div>
      </div>
      
      <footer class="content-block__footer">
        <div class="content-block__footer-container">
          [%
            left_buttons = [];
            right_buttons = [];
          
            IF edit_modal;
              left_buttons.push({
                type    = "modal_dismiss_button"
                class   = "btn btn-cancel"
                label   = "Cancel"
              });
          
              right_buttons.push({
                type  = "button",
                class = "btn btn-default btn-js-submit-record",
                id    = "",
                name  = "submit",
                value = "1",
                label = record.new_entry ? "Add" : "Update"
              });
            ELSIF NOT view_modal;
              left_buttons.push({
                type   = "link",
                target = url.page _ "/" _ layout_obj.identifier _ "/data",
                class  = "btn btn-cancel btn-js-cancel",
                label  = "Cancel"
              });
          
              IF record.is_draft;
                right_buttons.push({
                  type  = "button",
                  class = "btn btn-danger btn-js-submit-draft-record",
                  id    = "delete_draft",
                  name  = "delete_draft",
                  value = "submit",
                  label = "Delete draft"
                });
              END;
              IF record.new_entry AND page != "bulk";
                right_buttons.push({
                  type  = "button",
                  class = "btn btn-inverted btn-js-remove-unload btn-js-submit-draft-record",
                  id    = "save-draft",
                  name  = "draft",
                  value = "save-draft",
                  label = "Save as draft"
                });
              END;

              right_buttons.push({
                type  = "button",
                class = "btn btn-inverted btn-js-remove-unload btn-js-submit-record",
                id    = "submit-and-remain",
                name  = "submit",
                value = "submit-and-remain",
                label = "Save and continue"
              }, {
                type  = "button",
                class = "btn btn-default btn-js-remove-unload btn-js-submit-record",
                id    = "submit",
                name  = "submit",
                value = "submit",
                label = "Submit and exit"
              });
          
            END;
          
            INCLUDE navigation/button_bar.tt
              row_class = "row"
              columns   = [{
                class   = "col-md-4 mb-3 mb-md-0",
                buttons = left_buttons
              }, {
                class   = "col-md-8 d-md-flex justify-content-md-end align-items-center",
                buttons = right_buttons
              }];
          %]
        </div>
      </footer>
    </fieldset>
  </form>
</div>

[% IF view_modal %]
<div class="modal-footer modal-footer_sticky mt-1 pb-0 pr-0 pl-0">
  <div class="modal-footer__left"></div>
  <div class="modal-footer__right">
    <a class="btn btn-default" href="[% url.page %]/record/[% record.current_id %]" target="_blank">Open full record</a>
  </div>
</div>
[% END %]

[% INCLUDE wizard/curval.tt modalId="curvalModal"; %]
[% INCLUDE wizard/record_details.tt modalId="detailsModal"; %]
[% INCLUDE wizard/read_more.tt modalId = "readMore"; %]

[%
  IF record.user_can_delete;
    modal_description =
      "Are you sure you want to delete this record? The version history of the record will
      also be deleted. You cannot undo this step.";
      
    IF record.child_record_ids.size;
      modal_description = modal_description _ "<br><br>The following child records will also be deleted:<ul>";
      
      FOREACH rec IN record.child_record_ids;
        modal_description = modal_description _ "<li>" _ rec _ "</li>";
      END;
  
      modal_description = modal_description _ "</ul>";
    END;
    
    INCLUDE wizard/delete.tt
      modalId     = "deleteModal"
      label       = "Delete - record"
      description = modal_description;
  END;

%]

[%
  BLOCK panel_start;
    block_topic        = topic.topic;
    open               = !block_topic OR block_topic.initial_state == 'open' ? 'true' : 'false';
    widget_id_modifier = view_modal OR edit_modal ? '-modal' : '';
%]
  <div class="[% panel_class %]">
    <div class="card card--expandable card--topic">
      <div class="card__header">
        <button class="card__header-left" type="button" data-toggle="collapse" data-target="#topic[% block_topic.id; widget_id_modifier; %]" aria-expanded="false" aria-controls="topic[% block_topic.id; widget_id_modifier; %]">
          <span class="card__title">
            [% block_topic.name OR 'Other' | html %]
          </span>
        </button>
        <div class="card__header-right">
          [% IF editable AND NOT record.new_entry AND NOT edit_modal AND topic.has_editable %]
          <button
            type="button"
            class="btn btn-edit btn-js-edit"
          >
            <span class="btn__title">Edit</span>
          </button>
          [% END %]
          
          <button
            type="button"
            class="btn btn-view btn-js-view"
          >
            <span class="btn__title">View</span>
          </button>
        
          <button
            class="card__toggle"
            type="button"
            data-toggle="collapse"
            data-target="#topic[% block_topic.id; widget_id_modifier; %]"
            aria-expanded="[% open %]"
            aria-controls="topic[% block_topic.id; widget_id_modifier; %]"
          >
            <span>Toggle collapsible</span>
          </button>
        </div>
      </div>
      <div class="collapse[% IF open == 'true' %] show[% END %]" id="topic[% block_topic.id; widget_id_modifier; %]">
        <div class="card__content">
          [% IF block_topic.description %]
            <span class="card__description text-muted">
              [% block_topic.description_html %]
            </span>
          [% END %]
          [% IF topic.need_completed_topics_count %]
          <div role="alert" class="alert alert-warning">
            Fields in this section cannot be completed until mandatory fields
            in the [% block_topic.need_completed_topics_as_string | html %]
            section[% IF block_topic.need_completed_topics_count > 1 %]s[% END %]
            have been completed.
          </div>
          [% END %]
[% END %]

[% BLOCK panel_end %]
        </div>
      </div>
    </div>
  </div>
[% END %]

[% BLOCK form %]
  <style type="text/css" rel="stylesheet">
    img.autosize {
      max-height:200px;
      max-width:200px;
      height:auto;
      width:auto;
    }
  </style>
  [%
    editable = record.user_can_edit AND NOT record.deleted AND NOT is_history AND NOT view_modal ? 1 : 0;
    is_first_topic = 1;
    
    FOREACH topic IN record.topics;
      IF existing;
        oldvalue = existing.fields.$colid.html; # All value already entity-encoded
      END;

      panel_class = is_first_topic ? 'mb-3' : 'mt-3';
      PROCESS panel_start;

%]
  [% IF NOT record.new_entry AND NOT edit_modal; %]
  <div class="card__view-content">
    <div class="list list--vertical list--key-value list--no-borders list--fields">
      <ul class="list__items list-group list-group-flush">
        [%
          FOREACH col_panel IN topic.columns;
            NEXT IF !is_history AND col_panel.data.dependent_not_shown;
            NEXT IF view_modal AND col.type == "autocur";
        %]
        <li class="list__item[% IF col_panel.data.blank AND NOT layout.no_hide_blank %] list__item--blank[% END %] list-group-item">
          <span class="list__key">[% col_panel.name | html_entity %]</span>
          <span class="list__value">[% render_datum(col_panel, 'full') %]</span>
        </li>
        [% END %]
      </ul>
    </div>
  </div>
  
  <div class="card__edit-content">
  [%
    END; # end IF NOT record.new_entry AND NOT edit_modal; as the edit view can be opened directly
    
    FOREACH col IN topic.columns;
      NEXT IF NOT editable OR NOT col.display_for_edit;
    
      editvalue = col.data;
      field     = 'field' _ col.id;
      colid     = col.id;
      readonly  = col.readonly AND page != "approval" ? 1 : 0;
      indents   = record.indent.${col.id};
    
      field_label = "";
    
      IF col.show_in_edit;
        field_label = col.name;
        
        IF page != "bulk" AND oldvalue;
          field_label = field_label _ ' (current value "' _ oldvalue _ '")';
        END;
      END;
    
      IF col.multivalue;
        IF col.has_multivalue_plus;
          PROCESS print_field;
        ELSE;
          INCLUDE fields/hidden.tt id="" name=field value="" filter = "";
          PROCESS print_field;
        END;
      ELSE;
        PROCESS print_field;
      END;
    
    END; # foreach end
%]
  [% IF NOT record.new_entry AND NOT edit_modal; %]
  </div>
  [% END; %]
[%

      PROCESS panel_end;
  
      is_first_topic = 0;
    END;
  END;
%]

[% BLOCK print_field; %]
  <div
      class="[% IF col.show_in_edit %]form-group [% END %]linkspace-field[% IF col.show_in_edit==2 %] hidden[% END %]"
      [% IF col.show_in_edit==2 %]aria-hidden="true"[% END %]
      data-column-id="[% col.id %]"
      data-column-type="[% col.type %]"
      data-value-selector="[% col.value_selector %]"
      data-name="[% col.name | html %]"
      data-name-short="[% col.name_short %]"
        [% col.lookup_endpoint && 'data-lookup-endpoint="' _ col.lookup_endpoint _ '"' %]
        [% IF col.lookup_fields.size %]
            data-lookup-fields="[% col.lookup_fields_json | html %]"
        [% END %]
        [% col.has_display_field && 'data-has-dependency="' _ col.has_display_field _ '"' %]
        [% col.has_display_field && 'data-dependency="' _ col.display_fields_b64 _ '"' %]
        [% col.depends_on_b64 && 'data-calc-depends-on="' _ col.depends_on_b64 _ '"' %]
        [% col.code_b64 && 'data-code="' _ col.code_b64 _ '"' %]
        [% col.params_b64 && 'data-code-params="' _ col.params_b64 _ '"' %]
        [% 'data-is-multivalue="true"' IF col.multivalue %]
        [% col.readonly && 'data-is-readonly="true"' %]
        data-dependent-not-shown="[% editvalue.dependent_not_shown %]"
        style="margin-left:[% 50 * indents %]px"
    >
  [%
    field_is_required = col.optional OR page == "bulk" OR NOT col.userinput ? 0 : 1;
    # Override required values if the value was previously blank and shown
    IF editvalue.blank AND NOT editvalue.dependent_not_shown AND NOT record.new_entry;
      field_is_required = 0;
    END;
    # Override required if user cannot write to field
    IF col.readonly;
      field_is_required = 0;
    END;

    IF col.type == "enum";
      required      = field_is_required;
      details       = 0;
      values        = col.enumvals;
      select_items  = [];
      select_values = [];
      select_value  = "";
  
      # Add any values that have since been deleted, in case the user is not editing
      # this field (otherwise they will be blanked unexpectedly on submission
      FOREACH v IN editvalue.deleted_values;
        values.unshift(v);
      END;
  
      FOREACH value IN values;
        NEXT IF value.deleted;
  
        IF editvalue.id_hash.${value.selector_id};
          IF col.multivalue;
            select_values.push(value.value_id);
          ELSE;
            select_value = value.value_id;
          END;
        END;
  
        select_items.push({label_plain=value.value, label_html=value.html, value=value.value_id});
      END;

      IF col.multivalue;
        INCLUDE fields/select_multiple.tt
          id                   = col.id
          name                 = field
          label                = field_label
          label_checkbox_name  = page == "bulk" ? "bulk_inc_" _ col.id : ''
          fieldset_class       = "input"
          placeholder          = "Select option(s)"
          help_text            = col.description
          popover_body         = col.helptext_html
          is_readonly          = readonly
          is_required          = required
          hide_group           = 1
          items                = select_items
          values               = select_values
          with_details         = 0
          filter               = "html";
      ELSE;
        # Ensure a blank value is sent if nothing is selected
        INCLUDE fields/hidden.tt id="" name=field value="" filter="";
        INCLUDE fields/select_single.tt
          id                   = col.id
          name                 = field
          label                = field_label
          label_checkbox_name  = page == "bulk" ? "bulk_inc_" _ col.id : ''
          fieldset_class       = "input"
          placeholder          = "Select option"
          help_text            = col.description
          popover_body         = col.helptext_html
          is_readonly          = readonly
          is_required          = required
          hide_group           = 1
          items                = select_items
          value                = select_value
          with_details         = 0
          filter               = "html";
      END;
    ELSIF col.type == "curval";
      required      = field_is_required;
      details       = 1;
      select_items  = [];
      select_values = [];
      select_value  = "";
  
      IF page == "bulk";
          values = col.all_values;
      ELSIF col.has_subvals;
          values = editvalue.selected_values;
      ELSIF col.value_selector == "typeahead";
          values = editvalue.selected_values;
      ELSE;
          values = col.filtered_values;
      END;
  
      FOREACH value IN values;
        NEXT IF value.deleted;
        IF editvalue.id_hash.${value.selector_id};
          IF col.multivalue;
            select_values.push(value.value_id);
          ELSE;
            select_value = value.value_id;
          END;
        END;
  
        select_items.push({label_plain=value.value, label_html=value.html, value=value.value_id});
      END;

      show_add_btn = col.show_add;
      
      IF col.value_selector == "noshow";
        '<fieldset class="fieldset input">';
        INCLUDE fields/sub/label_fieldset.tt
          id           = col.id
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          label        = field_label
          help_text    = col.description
          filter       = "html"
          popover_body = col.helptext_html;
  
        IF show_add_btn;
          PROCESS curval_add_button;
        END;
  
        PROCESS curval_noshow;
        INCLUDE fields/hidden.tt id="" name=field value="" filter="";
  
        '</fieldset>';
      ELSIF col.multivalue;
        tmp_data_attributes = [
          {name = "value-selector", value = col.value_selector},
          {name = "layout-id", value = layout.identifier},
          {name = "typeahead-id", value = col.id},
          {name = "field", value = field},
          {name = "details-modal", value = "#detailsModal"}
        ];

        IF col.has_subvals;
          tmp_data_attributes = tmp_data_attributes.merge([
            {name = "filter-endpoint", value = url.page _ "/" _ layout_obj.identifier _ "/api/field/values/" _ col.id},
            {name = "submission-token", value = submission_token},
            {name = "filter-fields", value = col.data_filter_fields}
          ]);
        END;

        INCLUDE fields/select_multiple.tt
          id                   = col.id
          name                 = field
          label                = field_label
          label_checkbox_name  = page == "bulk" ? "bulk_inc_" _ col.id : ''
          formgroup_class      = "linkspace-field"
          fieldset_class       = "input"
          placeholder          = "Select option(s)"
          help_text            = col.description
          popover_body         = col.helptext_html
          data_attributes      = tmp_data_attributes
          is_readonly          = readonly
          is_required          = required
          hide_group           = 1
          items                = select_items
          values               = select_values
          with_details         = 1
          has_subvals          = col.has_subvals
          has_typeahead        = col.has_typeahead
          filter               = "html";

          data_attributes = [];

          IF show_add_btn;
            PROCESS curval_add_button;
          END;
      ELSE;
        tmp_data_attributes = [
          {name = "value-selector", value = col.value_selector},
          {name = "layout-id", value = layout.identifier},
          {name = "typeahead-id", value = col.id},
          {name = "field", value = field},
          {name = "details-modal", value = "#detailsModal"}
        ];

        IF col.has_subvals;
          tmp_data_attributes = tmp_data_attributes.merge([
            {name = "filter-endpoint", value = url.page _ "/" _ layout.identifier _ "/api/field/values/" _ col.id},
            {name = "submission-token", value = submission_token},
            {name = "filter-fields", value = col.data_filter_fields}
          ]);
        END;

        # Ensure a blank value is sent if nothing is selected
        INCLUDE fields/hidden.tt id="" name=field value="" filter="";
        INCLUDE fields/select_single.tt
          id                   = col.id
          name                 = field
          label                = field_label
          label_checkbox_name  = page == "bulk" ? "bulk_inc_" _ col.id : ''
          formgroup_class      = "linkspace-field"
          fieldset_class       = "input"
          placeholder          = "Select option"
          help_text            = col.description
          popover_body         = col.helptext_html
          data_attributes      = tmp_data_attributes
          is_readonly          = readonly
          is_required          = required
          hide_group           = 1
          items                = select_items
          value                = select_value
          with_details         = 1
          has_subvals          = col.has_subvals
          has_typeahead        = col.has_typeahead
          filter               = "html";
          
          data_attributes = [];
          
          IF show_add_btn;
            PROCESS curval_add_button;
          END;
      END;
    ELSIF col.type == "tree";
      IF col.optional;
        '<fieldset class="fieldset input">';
      ELSE;
        '<fieldset class="fieldset input fieldset--required">';
      END;
        INCLUDE fields/sub/label_fieldset.tt
          id           = col.id
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          label        = field_label
          help_text    = col.description
          filter       = "html"
          popover_body = col.helptext_html;
      IF readonly;
        '<div class="form-group">';
            render_datum(col);
        '</div>';
        # Send values back, otherwise controller will think blank values submitted
        FOREACH val IN editvalue.ids;
          INCLUDE fields/hidden.tt id="" name=field value=val filter="";
        END;
      ELSE;
        INCLUDE fields/tree.tt
          id                = "jstree" _ col.id
          hide_group        = 1
          tree_field        = field
          layout_id         = col.id
          layout_identifier = layout_obj.identifier
          end_node_only     = col.end_node_only ? 1 : 0
          ids_as_params     = editvalue.ids_as_params
          tree_values       = editvalue.ids
          edit_tree         = 0;
      '</fieldset>';
      END;
    ELSIF col.type == "person";

      select_items  = [];
      select_values = editvalue.ids;
      required      = field_is_required;

      IF col.default_to_login AND NOT record.current_id; # default to current user for new records only
        select_values = [user.id];
      END;

      FOREACH person IN col.people;
        NEXT IF person.deleted;
        select_items.push({label_plain=person.value, label_html=person.value_html, value=person.id});
      END;

      IF col.multivalue;
        INCLUDE fields/select_multiple.tt
          id                   = col.id
          name                 = field
          label                = field_label
          label_checkbox_name  = page == "bulk" ? "bulk_inc_" _ col.id : ''
          fieldset_class       = "input"
          placeholder          = "Select option(s)"
          help_text            = col.description
          popover_body         = col.helptext_html
          is_readonly          = readonly
          is_required          = required
          hide_group           = 1
          items                = select_items
          values               = select_values
          with_details         = 0
          filter               = "html";
      ELSE;
        # Ensure a blank value is sent if nothing is selected
        INCLUDE fields/hidden.tt id="" name=field value="" filter="";
        INCLUDE fields/select_single.tt
          id                   = col.id
          name                 = field
          label                = field_label
          label_checkbox_name  = page == "bulk" ? "bulk_inc_" _ col.id : ''
          fieldset_class       = "input"
          placeholder          = "Select option"
          help_text            = col.description
          popover_body         = col.helptext_html
          is_readonly          = readonly
          is_required          = field_is_required
          hide_group           = 1
          items                = select_items
          value                = select_values.first
          with_details         = 0
          filter               = "html";
      END;

    ELSIF col.type == "file";
      fieldset_required = field_is_required ? 'fieldset--required' : '';
      '<fieldset class="fieldset input ' _ fieldset_required _ '">';
        INCLUDE fields/sub/label_fieldset.tt
          id           = col.id
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          label        = field_label
          help_text    = col.description
          filter       = "html"
          popover_body = col.helptext_html;
  
      IF readonly;
        IF editvalue.files.size;
          '<div class="list list--vertical list--no-borders">';
            '<ul class="list__items">';
              FOREACH file IN editvalue.files;
                '<li class="list__item">';
                  INCLUDE fields/hidden.tt id=col.id name=field value=file.id filter="";
                  INCLUDE fields/sub/filter.tt value=file.name filter="html";
                '</li>';
              END;
            '</ul>';
          '</div>';
        ELSE;
          '<p class="help-block">No current file (read-only field, cannot be updated).</p>';
        END;
      ELSE;
        # Ensure something gets sent back to show it's been displayed
        INCLUDE fields/hidden.tt id="" name=field value="" filter="";
        
        '<div class="list list--vertical list--key-value list--no-borders">';
          '<ul class="list__items fileupload__files">';
            FOREACH file IN editvalue.files;
            '<li class="list__item">';
              '<span class="list__key">';
                INCLUDE fields/sub/checkbox.tt
                  id      = "file_checkbox_" _ col.id _ "_" _ file.id
                  name    = field
                  label   = "Include file."
                  value   = file.id
                  checked = 1
                  filter  = "html";
          
              '</span>';
              '<span class="list__value">';
                'Current file name: ';
                '<a class="link link--plain" href="' _ url.page _ '/file/' _ file.id _'">';
                  file.name | html;
                '</a>.';
              '</span>';
            '</li>';
            END;
          '</ul>';
       '</div>';
       '<div class="file-upload">';
        INCLUDE fields/file.tt
          id               = col.id
          name             = "file"
          label            = "Choose file"
          placeholder      = "No file chosen"
          custom_classes   = ""
          input_class      = "input--document"
          show_progress    = 1
          data_attributes  = [
            {name = "field", value = field},
            {name = "fileupload-url", value = url.page _ "/api/file/"},
            {name = "multivalue", value = col.multivalue}
          ]
          popover_body     = ""
          help_text        = ""
          popover_body     = ""
          is_required      = field_is_required
          is_required_html = editvalue.files.size ? 0 : field_is_required
          is_readonly      = readonly
          is_multiple      = col.multivalue == multivalue ? 1 : 0
          filter           = "";
  
          show_progress = 0;
          data_attributes = "";
        '</div>';
      END;
      '</fieldset>';
    ELSIF col.type == "daterange";
      IF col.multivalue;
        INCLUDE fields/multi_field.tt
          id           = col.id
          name         = field
          label        = field_label
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          help_text    = col.description
          popover_body = col.helptext_html
          filter       = "html"
          is_required  = field_is_required
          is_readonly  = readonly;
      ELSE;
        INCLUDE fields/daterange.tt
          label        = field_label
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          input_class  = "flex-nowrap"
          help_text    = col.description
          popover_body = col.helptext_html
          hide_group   = 1
          from = {
            id           = col.id _ "_from",
            name         = field,
            class        = col.show_datepicker and !readonly ? "input--datepicker" : "",
            label        = "From",
            help_text    = "",
            popover_body = "",
            placeholder  = config.dateformat_datepicker,
            dateformat   = config.dateformat_datepicker,
            value        = editvalue.html_form.shift,
            is_required  = field_is_required,
            is_readonly  = readonly
          }
          to = {
            id           = col.id _ "_to",
            name         = field,
            class        = col.show_datepicker and !readonly ? "input--datepicker" : "",
            label        = "To",
            help_text    = "",
            popover_body = "",
            placeholder  = config.dateformat_datepicker,
            dateformat   = config.dateformat_datepicker,
            value        = editvalue.html_form.shift
            is_required  = field_is_required,
            is_readonly  = readonly
          };
      END;
    ELSIF col.type == "rag";
      # XXX To implement
    ELSIF col.type == "calc"; %]
  <div class="textarea [% input_class %]"[% textarea_style %]>
    [%
      INCLUDE fields/sub/label_input.tt label_type="textarea" label=field_label;
      FOREACH val IN editvalue.html_form;
        IF col.show_in_edit;
          INCLUDE fields/textarea.tt
            id           = col.id
            name         = field
            label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
            value        = val
            input_class  = ""
            custom_classes = "auto-adjust"
            placeholder  = ""
            help_text    = col.description
            popover_body = col.helptext_html
            filter       = "html"
            is_readonly  = 1
            hide_group   = 1;
        ELSE;
          INCLUDE fields/hidden.tt
            id     = col.id
            name   = field
            value  = val
            filter = "html";
        END;
      END;
    %]
  </div>
  [%
    ELSIF col.textbox;
      IF col.multivalue;
        INCLUDE fields/multi_field.tt
          id           = col.id
          name         = field
          label        = field_label
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          help_text    = col.description
          popover_body = col.helptext_html
          filter       = "html"
          is_required  = field_is_required
          is_readonly  = readonly;
      ELSE;
        INCLUDE fields/textarea.tt
          id           = col.id
          name         = field
          label        = field_label
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          value        = editvalue.html_form.shift
          help_text    = col.description
          popover_body = col.helptext_html
          filter       = "html"
          is_required  = field_is_required
          is_readonly  = readonly
          hide_group   = 1
          rows         = 10;
        END;
    ELSE;
      field_input_type  = "text";
      field_input_class = "";
      field_placeholder = "";
  
      IF col.type == "date";
        field_input_class = "input--date";
        field_placeholder = config.dateformat_datepicker;
        dateformat        = config.dateformat_datepicker;
  
        IF col.show_datepicker AND !readonly;
          field_input_class = field_input_class _ " input--datepicker";
        END;
      END;
  
      IF col.type == "intgr";
        field_input_type = "number";
  
        IF editvalue.value.defined AND col.show_calculator;
          field_input_class = "calculator";
        END;
      END;

      IF col.multivalue;
        INCLUDE fields/multi_field.tt
          id           = col.id
          name         = field
          label        = field_label
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          field_input_class = field_input_class
          input_class  = field_input_class
          placeholder  = field_placeholder
          help_text    = col.description
          popover_body = col.helptext_html
          filter       = "html"
          is_required  = field_is_required
          is_readonly  = readonly
          type         = field_input_type;
      ELSE;
        INCLUDE fields/input.tt
          id           = col.id
          name         = field
          label        = field_label
          label_checkbox_name = page == "bulk" ? "bulk_inc_" _ col.id : ''
          value        = editvalue.html_form.shift
          input_class  = field_input_class
          placeholder  = field_placeholder
          help_text    = col.description
          popover_body = col.helptext_html
          filter       = "html"
          is_required  = field_is_required
          is_readonly  = readonly
          hide_group   = 1
          type         = field_input_type;
      END;
  
      
    END;
  %]
  [% IF col.lookup_endpoint %]
    <div class="lookup-status d-none">
      <div class="d-flex align-items-center p-2">
        <div class="spinner-border spinner-border-sm text-info mr-3" role="status" aria-hidden="true"></div>
        <div class="text-info status-text"></div>
      </div>
    </div>
  [% END %]
  </div>
[% END %]

[% BLOCK curval_add_button %]
  <button
    type="button"
    class="btn btn-js-curval-modal btn-add-link"
    data-toggle="modal"
    data-target=#curvalModal
    data-layout-id="[% col.id %]"
    data-instance-name="[% col.layout_parent.identifier %]"
  >
    <span class="btn__title">Add</span>
  </button>
[% END %]

[%
  BLOCK curval_noshow;
    # prepare table config
    table_id               = 'curval_list_' _ col.id;
    table_class            = 'table-curval-group table-thead-hidden table-striped';
    table_dom              = 't';
    table_language         = {emptyTable => "No data available."};
    table_show_all_records = 1

    table_caption = "Table to show values in " _ col.name;

    table_columns          = [];

    table_buttons = [{
      type         = "modal_button"
      button_class = "btn btn-small btn-link btn-js-curval-modal"
      modalId      = "curvalModal"
      label        = "Edit"
      filter       = ""
      sub_field    = "fields/hidden.tt"
      sub_params   = ""
    }];

    UNLESS column.limit_rows;
      table_buttons.push({
        type             = "button"
        button_type      = "button"
        button_class     = "btn btn-small btn-delete btn-js-curval-remove"
        label            = "Remove"
      });
    END;

    rows = [];

    first_loop = 1;

    FOREACH val IN editvalue.html_form;
      row = {
        button = {
          sub_params = {
            id    = "curval-current-id-" _ val.id
            name  = field
            value = val.as_query OR val.id
          }
        }
        modal = {
          dataCurrentId = val.id
          dataLayoutId = col.id
          dataInstanceName = col.layout_parent.identifier
        }
        class = "table-curval-item"
        fields = []
      };

      FOREACH subcol IN val.presentation.columns;
        IF first_loop;
          table_columns.push({
            name      = "",
            class     = "curval-inner-text data-table__header--invisible",
            orderable = 0
          });
        END;

        row.fields.push({
          type       = "text",
          label      = render_datum(subcol),
          field_name = "column",
          cell_class = "curval-inner-text " _ subcol.type
        });
      END;

      rows.push(row);
      first_loop = 0;
    END;

    INCLUDE tables/basic_table.tt;
%]

[% END %]
