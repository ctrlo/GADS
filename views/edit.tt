<h2>
    [% IF page == "bulk" %]
        [% IF bulk_type == "update" %]
            Bulk update
        [% ELSIF bulk_type == "clone" %]
            Clone records
        [% END %]
    [% ELSIF record.current_id %]
        Edit record ID [% record.current_id %]
        [% IF record.parent_id %]
            <small>(child of record [% record.parent_id %])</small>
        [% END %]
    [% ELSIF child %]
        Create child record of [% child %]
    [% ELSIF clone %]
        New record copied from record ID [% clone | html %]
    [% ELSE %]
        New record
    [% END %]
</h2>
[% IF record.current_id %]
    <p></p>
    <div class="btn-group">
        <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" href="#">Action <b class="caret"></b></button>
        <ul class="dropdown-menu scrollable-menu" role="menu" aria-labelledby="edit_action">
            <li role="presentation"><a role="menuitem" href="/edit/?from=[% record.current_id %]">Copy record</a></li>
            [% IF layout.user_can("create_child") AND NOT record.parent_id %]
                <li role="presentation"><a role="menuitem" href="/edit/?child=[% record.current_id %]">Create child record</a></li>
            [% END %]
            [% IF user.permission.link %]
                <li role="presentation"><a role="menuitem" href="/link/[% record.current_id %]">Link record</a></li>
            [% END %]
            <li role="presentation"><a role="menuitem" href="/record/[% record.current_id %]">View record</a></li>
        </ul>
    </div>
[% END %]
<p></p>
<form role="form" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-6">
            [% IF record.current_id %]
                <input type="hidden" name="current_id" value="[% record.current_id %]">
            [% END %]
            [% IF child %]
                <input type="hidden" name="child" value="[% child %]">
            [% END %]
            [% trees = [] %]
            [% jscode = [] %]
            [% typeaheads = [] %]
            [% columns_done = {} %]
            [% FOREACH col IN all_columns %]
                [% PROCESS do_col %]
            [% END %]
        </div>
    </div>
    <div style="height:55px;"></div>
    <nav class="navbar navbar-default navbar-fixed-bottom" style="min-height:55px">
        <div class="container">
            [% IF record.has_previous_values %]
                <button type="submit" name="submit" value="back" class="btn btn-default submit_button">Previous</button>
            [% END %]
            <button type="submit" name="submit" value="submit" class="btn btn-primary submit_button">
                [% IF record.has_next_values AND page != "bulk" %]Next[% ELSE %]Save[% END %]
            </button>
            [% IF record.user_can_delete %]
                <a role="button" class="btn btn-default" href="" data-toggle="modal" data-target="#modaldelete">Delete</a>
            [% END %]
            <a href="/data" class="btn btn-default">Cancel</a>
        </div>
    </nav>
</form>

<div class="modal fade" id="helptext_modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

[% IF record.user_can_delete %]
   <!-- Modal -->
    <div class="modal fade" id="modaldelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form role="form" method="post" enctype="multipart/form-data">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="myModalLabel">Delete record</h4>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this record? All previous versions will
                        also be deleted.</p>
                    [% IF record.child_record_ids.size %]
                        <h5>The following child records will also be deleted:</h5>
                        <ul>
                            [% FOREACH rec IN record.child_record_ids %]
                                <li>[% rec %]</li>
                            [% END %]
                        </ul>
                    [% END %]
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button type="submit" value="[% record.current_id %]" class="btn btn-primary submit_button" name="delete">Delete</button>
                </div>
                </form>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
[% END %]

[% WRAPPER modal_dialog.tt modal_id="readmore_modal" modal_large=1 %]
[% END %]

<script type="text/javascript">
    var jscode='[% FILTER remove('\n+') %]
        [% FILTER replace('\'', '\\\'') %]
        $(document).ready(function () {
            $(document).on("click", ".cloneme", function() {
                var parent = $(this).parents('.input_holder');
                var cloned = parent.clone();
                cloned.removeAttr('id').insertAfter(parent);
                cloned.find(".datepicker").datepicker({format: "[% config.dateformat_datepicker %]", autoclose: true});
            });
            $('.removeme').click(function() {
                var parent = $(this).parents('.input_holder');
                if (parent.siblings(".input_holder").length > 0) {
                    parent.remove();
                }
            });

            $('#helptext_modal').on('show.bs.modal', function (e) {
                var loadurl = $(e.relatedTarget).data('load-url');
                $(this).find('.modal-body').load(loadurl);
            });

            $(document).on("mousedown", ".moreinfo", function(e) {
                var record_id = $(e.target).data('record-id');
                var m = $("#readmore_modal");
                m.find('.modal-body').text('Loading...');
                m.find('.modal-body').load('/record_body/' + record_id + '?oi=2');
                m.modal();
            });

            $('.input-daterange input.from').each(function (){
                $(this).on('changeDate', function(e) {
                    var toDatepicker = $(this).parents('.input-daterange').find('.datepicker.to');
                    if (!toDatepicker.val()) {
                        toDatepicker.datepicker('update', $(this).datepicker('getDate'));
                    }
                });
            });
            var confirmOnPageExit = function (e) 
            {
                e = e || window.event;
                var message = 'Please note that any changes will be lost.';
                if (e) 
                {
                    e.returnValue = message;
                }
                return message;
            };
            window.onbeforeunload = confirmOnPageExit;
            $(".submit_button").click( function() {
                window.onbeforeunload = null;
            });

            $(document).on('click', '.remove_datepicker', function() {
                var dp = '.datepicker' + $(this).data("field");
                $(dp).datepicker('remove');
                alert("Date selector has been disabled for this field");
            });

            [% FOREACH typeahead IN typeaheads %]
                $("#[% typeahead.id %]").change( function() {
                    if (!($( this ).val()))
                    {
                        $("#[% typeahead.id %]_value").val("");
                    }
                });
                $("#[% typeahead.id %]").typeahead({
                    delay: 500,
                    matcher: function () { return true; },
                    sorter: function (items) { return items; },
                    afterSelect: function (selected) {
                        $("#[% typeahead.id %]_value").val(selected.id);
                    },
                    source: function (query, process) {
                        return $.ajax({
                            type: 'GET',
                            url: '/match/layout/[% typeahead.id | uri %]',
                            data: { q: query },
                            success: function(result) { process(result) },
                            dataType: 'json'
                        });
                    }
                });
            [% END %]

            var calculator_id   = 'calculator_div';

            function setup_calculator (selector) {
                var calculator_elem = $('<div class="dropdown-menu" id="' + calculator_id + '"></div>');
                calculator_elem.css({
                    position: 'absolute',
                    'z-index': 1000,
                    display: 'none',
                    padding: '10px'
                });
                $('body').append(calculator_elem);

                calculator_elem.append('
                    <form class="form-inline">
                        <div class="form-group btn-group operator" data-toggle="buttons"></div>
                        <div class="form-group"><input type="text" placeholder="Number" class="form-control"></input></div>
                        <div class="form-group">
                            <input type="submit" value="Calculate" class="btn btn-default"></input>
                        </div>
                    </form>
                ');

                $(document).mouseup(function (e)
                {
                    if (!calculator_elem.is(e.target)
                        && calculator_elem.has(e.target).length === 0)
                    {
                        calculator_elem.hide();
                    }
                });

                var calculator_operation;
                var integer_input_elem;

                var calculator_button = [
                    {
                        action:     'add',
                        label:      '+',
                        keypress:   [ '+' ],
                        operation:  function (a, b) { return a + b; }
                    },
                    {
                        action:     'subtract',
                        label:      '-',
                        keypress:   [ '-' ],
                        operation:  function (a, b) { return a - b; }
                    },
                    {
                        action:     'multiply',
                        label:      '×',
                        keypress:   [ '*', 'X', 'x', '×' ],
                        operation:  function (a, b) { return a * b; }
                    },
                    {
                        action:     'divide',
                        label:      '÷',
                        keypress:   [ '/', '÷' ],
                        operation:  function (a, b) { return a / b; }
                    }
                ];
                var keypress_action = {};
                var operator_btns_elem = calculator_elem.find('.operator');
                for (var i in calculator_button) {
                    ( function () {
                        var btn = calculator_button[i];
                        var button_elem = $(
                            '<label class="btn btn-primary" style="width:40px">'
                            + '<input type="radio" name="op" class="btn_label_' + btn.action + '">'
                            + btn.label
                            + '</input>'
                            + '</label>'
                        );
                        operator_btns_elem.append(button_elem);
                        button_elem.on('click', function() {
                            calculator_operation = btn.operation;
                            calculator_elem.find(':text').focus();
                        });
                        for (var j in btn.keypress) {
                            var keypress = btn.keypress[j];
                            keypress_action[keypress] = btn.action;
                        }
                    })();
                }

                calculator_elem.find(':text').on('keypress', function (e) {
                    var key_pressed = e.key;
                    if (key_pressed in keypress_action) {
                        var button_selector = '.btn_label_'
                            + keypress_action[key_pressed];
                        calculator_elem.find(button_selector).click();
                        e.preventDefault();
                    }
                });
                calculator_elem.find('form').on('submit', function (e) {
                    var new_value = calculator_operation(
                        + integer_input_elem.val(),
                        + calculator_elem.find(':text').val()
                    );
                    integer_input_elem.val(new_value);
                    calculator_elem.hide();
                    e.preventDefault();
                });

                var calc_button =
                    '<span class="btn-xs btn-link openintcalculator">Calculator</span>';
                $(selector).closest('.form-group').find('label').after(calc_button);

                $('.openintcalculator').on('click', function (e) {
                    var calc_elem = $(e.target);
                    var container_elem = calc_elem.closest('.form-group');
                    var input_elem = container_elem.find(selector);

                    var container_y_offset = container_elem.offset().top;
                    var container_height = container_elem.height();
                    var calculator_y_offset;
                    var calc_div_height = $('#calculator_div').height();
                    if (  container_y_offset > calc_div_height ) {
                        calculator_y_offset = container_y_offset - calc_div_height;
                    }
                    else {
                        calculator_y_offset = container_y_offset + container_height;
                    }
                    calculator_elem.css({
                        top: calculator_y_offset,
                        left: container_elem.offset().left
                    });
                    var calc_input = calculator_elem.find(':text');
                    calc_input.val('');
                    calculator_elem.show();
                    calc_input.focus();
                    integer_input_elem = input_elem;
                });
            }

            setup_calculator('.intcalculator');

            [% INCLUDE tree.tt %]
            [% jscode.join('') %]
        }); 
[% END %]
[% END %]';
</script>

[% BLOCK showcol %]
    [% NEXT IF dispcol.type == "rag" OR dispcol.type == "calc" %]
    [% field = 'field' _ dispcol.id %]
    [% colid = dispcol.id %]

    [%# Skip if field has a filter (which will alter its values) and the dependent values have not yet been completed %]

    [%# When bulk updating, just show all fields %]
    [% UNLESS page == "bulk" %]
        [%# If field's value has already been written to, do not display field by add as hidden value instead %]
        [% IF record.fields.$colid.value_previous_page OR record.fields.$colid.value_next_page %]
            [% IF record.fields.$colid.html_form.size %]
                [% FOREACH val IN record.fields.$colid.html_form %]
                    <input type="hidden" name="[% field %]" value="[% val %]">
                [% END %]
            [% ELSE %]
                [%# Ensure a value gets sent back to show this field was shown if nothing selected %]
                <input type="hidden" name="[% field %]">
            [% END %]
            [% IF record.fields.$colid.value_previous_page %]
                <input type="hidden" name="previous_fields" value="[% colid %]">
            [% ELSE %]
                <input type="hidden" name="next_fields" value="[% colid %]">
            [% END %]
            [% NEXT %]
        [% END %]

        [% NEXT UNLESS record.fields.$colid.show_for_write %]
    [% END %]

    <input type="hidden" name="shown_fields" value="[% colid %]">

    [%# Skip field if it's an approval request but a value not needing approval %]
    [% NEXT IF page == "approval" AND NOT (record.fields.$colid.has_value)  %]
    [%# Skip if it's a child record and the value doesn't exist %]
    [% NEXT IF record.parent_id AND NOT (record.fields.$colid.has_value) AND NOT layout.user_can("create_child") %]
    [%# Skip if it's a linked record and the value is linked %]
    [% IF record.linked_id AND dispcol.link_parent %]
        <input type="hidden" name="[% field %]">
        [% NEXT %]
    [% END %]

    [% IF existing %]
        [% oldvalue = existing.fields.$colid.html %] [%# All value already entity-encoded %]
    [% END %]

    [%# This is painful. There appears to be no way to undefine a variable in TT,
        other than including raw Perl, which then requires a config change. So,
        use a hash for the value, and make it empty each loop. The value key
        is used for what would have been the value variable. %]
    [% value = {} %]

    [%# If form_value returns undef, then TT still gives it the value of "".
        Therefore, test the function first for undef, then assign. We rely
        on an undefined value for tests later. %]
    [% IF record.fields.$colid.defined %][% value.value = record.fields.$colid %][% END %]

    [% editvalue = value.value %]

    [% IF (
              (record.current_id AND !dispcol.user_can("write_existing"))
              OR (!record.current_id AND !dispcol.user_can("write_new"))
          )
       AND page != "approval" 
    %]
        [% readonly = "readonly" %]
    [% ELSE %]
        [% readonly = "" %]
    [% END %]

    <div class="form-group">
        [% label = dispcol.name | html_entity %]
        [% IF dispcol.optional OR page == "bulk" %]
            [% label_style = 'style="font-weight:normal !important"' %]
        [% ELSE %]
            [% label_style = 'style="font-weight:bold !important"' %]
            [% label = label _ '*' %]
        [% END %]
        [% IF dispcol.description %]
            [% desc = dispcol.description | html_entity %]
            [% label = label _ ' <span style="font-weight:normal !important">(' _ desc _ ")</span>" %]
        [% END %]
        [% IF dispcol.helptext %]
            [% label = label _ " (<a data-toggle='modal' data-load-url='/helptext/"
                             _ dispcol.id  _ "' data-target='#helptext_modal' style='cursor:pointer'>?</a>)" %]
        [% END %]
        [% IF page == "bulk" AND dispcol.addable AND (dispcol.return_type == "date" OR dispcol.return_type == "daterange") %]
            [% label_add = BLOCK %]
                (<span style="font-weight:normal !important"><a style="cursor: pointer" data-toggle="popover" title="Add or subtract for cloned value"
                data-content="You can add or subtract a time period for the updated or cloned values by entering an amount, such as &quot;+ 4 weeks&quot;.
                [% IF dispcol.show_datepicker %]
                    First you will need to <a class='remove_datepicker' style='cursor: pointer' data-field='[% dispcol.id %]'>
                    disable the date selector
                [% END %]
                </a>." data-html="true">add/subtract</a></span>)
            [% END %]
            [% label = label _ label_add %]
        [% ELSIF page == "bulk" AND dispcol.addable %]
            [% label_add = BLOCK %]
                (<span style="font-weight:normal !important"><a style="cursor: pointer" data-toggle="popover" title="Add or subtract for cloned value"
                data-content="You can add or subtract a value for the new or cloned values by entering an amount in brackets, such as &lsquo;(+25)&rsquo;.
                Available operators are: &lsquo;+&rsquo;, &lsquo;-&rsquo;, &lsquo;*&rsquo;; and &lsquo;/&rsquo;." data-html="true">add/subtract</a></span>)
            [% END %]
            [% label = label _ label_add %]
        [% END %]
        [% IF child AND layout.user_can("create_child") %]
            <div class="checkbox">
                <label>
                    <input type="checkbox" name="child_inc" value="[% dispcol.id %]"
                        [% IF record.current_id AND record.fields.$colid.child_unique %]checked[% END %]
                    > <span [% label_style %]>[% label %]</span> (tick for own value, untick to inherit)
                </label>
            </div>
        [% ELSIF page == "bulk" %]
            <div class="checkbox">
                <label>
                    <input type="checkbox" name="bulk_inc_[% dispcol.id %]" value="1"
                    > <span [% label_style %]>[% label %]</span>
                </label>
            </div>
        [% ELSE %]
            <label for="[% dispcol.id %]" [% label_style %]>
                [% label %][% IF oldvalue %] (current value &quot;[% oldvalue %]&quot;)[% END %]
            </label>
        [% END %]
        [% IF dispcol.multivalue %]
            [% IF dispcol.has_multivalue_plus %]
                [% IF editvalue.html_form.size %]
                    [% WHILE editvalue.html_form.size %]
                        [% PROCESS print_field %]
                    [% END %]
                [% ELSE %]
                    [% PROCESS print_field %]
                [% END %]
            [% ELSE %]
                [%# Ensure a value gets sent back to show this field was shown if nothing selected %]
                <input type="hidden" name="[% field %]">
                [% PROCESS print_field %]
            [% END %]
        [% ELSE %]
            [% PROCESS print_field %]
        [% END %]
    </div>

    [%# Prevent recursive loops %]
    [% cid = dispcol.id %]
    [% columns_done.$cid = 1 %]
[% END %]

[% BLOCK print_field %]
    <div class="input_holder">
        <div class="row">
            <div class="[% IF dispcol.multivalue AND dispcol.has_multivalue_plus %]col-md-10[% ELSE %]col-md-12[% END %]">
                [% IF dispcol.type == "enum" %]
                    <select class="form-control [% IF dispcol.multivalue %]selectpicker [% END %]" name="[% field %]" id="[% dispcol.id %]" [% IF readonly %]disabled[% END %] [% IF dispcol.multivalue %]multiple[% END %]>
                        [% IF dispcol.optional OR editvalue.deleted OR (record.current_id AND NOT editvalue.id) OR NOT record.current_id %]
                            [% IF !dispcol.multivalue %]
                                <option></option>
                            [% END %]
                        [% END %]
                        [% IF dispcol.ordering == "desc" %]
                            [% enumvals = dispcol.enumvals.sort('value').reverse %]
                        [% ELSIF dispcol.ordering == "asc" %]
                            [% enumvals = dispcol.enumvals.sort('value') %]
                        [% ELSE %]
                            [% enumvals = dispcol.enumvals %]
                        [% END %]
                        [% is_selected = 0 %]
                        [% FOREACH enumval IN enumvals %]
                            <option value="[% enumval.id %]" [% IF editvalue.id_hash.${enumval.id} %][% is_selected = 1 %]selected[% END %]>[% enumval.value | html_entity %]</option>
                        [% END %]
                        [% IF editvalue.id AND NOT is_selected AND !dispcol.multivalue %]
                            <option value="[% editvalue.id %]" selected>[% editvalue.html %]</option>
                        [% END %]
                    </select>
                [% ELSIF dispcol.type == "curval" %]
                    [% IF dispcol.typeahead %]
                        <input type="hidden" name="[% field %]" id="[% dispcol.id %]_value" value="[% editvalue.id %]">
                        <input type="text" class="form-control" id="[% dispcol.id %]" autocomplete="off"
                            name="[% field %]_typeahead" value="[% IF record %][% editvalue.html %][% END %]" [% readonly %] >
                        [% typeaheads.push({id = dispcol.id, field = field }) %]
                    [% ELSE %]
                        [% IF dispcol.multivalue %]
                            [%# Ensure a value gets sent back to show this field was shown if nothing selected %]
                            <input type="hidden" name="[% field %]">
                        [% END %]
                        <select class="form-control [% IF dispcol.has_subvalues %]selectpicker [% END %]"
                            name="[% field %]" id="[% dispcol.id %]" [% IF readonly %]disabled[% END %]
                            [% IF dispcol.has_subvalues %]
                                data-multiple-separator="; " data-window-padding="70"
                                [% IF dispcol.multivalue %]multiple[% END %]
                            [% END %]>
                            [% IF !dispcol.multivalue %]
                                [% IF dispcol.optional OR editvalue.deleted OR (record.current_id AND NOT editvalue.id) OR NOT record.current_id %]
                                    <option></option>
                                [% END %]
                            [% END %]
                            [% IF page == "bulk" %]
                                [% enumvals = dispcol.all_values %]
                            [% ELSE %]
                                [% enumvals = dispcol.filtered_values %]
                            [% END %]
                            [% FOREACH enumval IN enumvals %]
                                [% UNLESS enumval.deleted %]
                                    <option value="[% enumval.id %]" [% IF editvalue.id_hash.${enumval.id} %]selected[% END %]
                                        [% IF dispcol.has_subvalues %]
                                            title="[% enumval.mainvalue | html_entity %]" [%# only show main title in selection %]
                                            [%# custom content for each option in order to show tooltip text %]
                                            data-content="<span title='[% enumval.value | html_entity %]'>
                                                [% enumval.mainvalue | html_entity %]
                                                <small class='text-muted'>[% enumval.subvalue | html_entity %]</small>
                                                <span class='moreinfo' data-record-id='[% enumval.id %]'>Read more...</span>
                                            </span>"
                                        [% END %]
                                    >
                                    [% enumval.value | html_entity %]
                                    </option>
                                [% END %]
                            [% END %]
                        </select>
                    [% END %]
                [% ELSIF dispcol.type == "tree" %]
                    <input type="hidden" name="[% field %]" id="treeval_id[% dispcol.id %]" value="[% editvalue.id %]">
                    [% IF readonly %]
                        <div class="form-group">
                            [% editvalue.html %]
                        </div>
                    [% ELSE %]
                        [% trees.push({id = dispcol.id, end_node_only = dispcol.end_node_only, value = editvalue }) %]
                        <div class="form-group">
                            <a style="cursor:pointer" onclick="$('#jstree[% dispcol.id %]').jstree('open_all');">Expand all</a> |
                            <a style="cursor:pointer" onclick="$('#jstree[% dispcol.id %]').jstree('close_all');">Collapse all</a> |
                            <a style="cursor:pointer" onclick="$('#jstree[% dispcol.id %]').jstree('refresh');">Reload</a>
                            <div id="jstree[% dispcol.id %]"></div>
                        </div>
                        <input type="hidden" id="[% dispcol.id %]" value="">
                    [% END %]
                [% ELSIF dispcol.type == "person" %]
                    <select class="form-control" name="[% field %]" id="[% dispcol.id %]" [% readonly %] >
                        [% IF dispcol.optional OR editvalue.deleted OR (record.current_id AND NOT editvalue.id) OR NOT record.current_id %]
                            <option></option>
                        [% END %]
                        [% IF editvalue.id %]
                            [% selected = editvalue.id %]
                        [% ELSIF NOT record.current_id %] [%# default to current user for new records only %]
                            [% selected = user.id %]
                        [% END %]
                        [% is_selected = 0 %]
                        [% FOREACH person IN dispcol.people %]
                            [% UNLESS person.deleted %]
                                <option value="[% person.id %]" [% IF selected == person.id %][% is_selected = 1 %]selected[% END %]>[% person.value | html_entity %]</option>
                            [% END %]
                        [% END %]
                        [% IF editvalue.id AND NOT is_selected %]
                            <option value="[% editvalue.id %]" selected>[% editvalue.html %]</option>
                        [% END %]
                    </select>
                [% ELSIF dispcol.type == "file" %]
                    [% IF readonly %]
                        [% IF editvalue.id %]
                            <input type="hidden" name="[% field %]" value="[% editvalue.id %]">
                            <p class="help-block">Current file name: [% editvalue.html %] (read-only field, cannot be updated).</p>
                        [% ELSE %]
                            <p class="help-block">No current file (read-only field, cannot be updated).</p>
                        [% END %]
                    [% ELSE %]
                        <input type="file" id="[% dispcol.id %]" name="[% "file" _ dispcol.id %]">
                        [%# Ensure something gets sent back to show it's been displayed %]
                        <input type="hidden" name="[% field %]">
                        [% IF editvalue.id %]
                            <p class="help-block">
                                <input type="checkbox" name="[% field %]" value="[% editvalue.id %]" checked>Include file.
                                Current file name: [% editvalue.html %]. Select a new file to replace.
                            </p>
                        [% END %]
                    [% END %]
                [% ELSIF dispcol.type == "daterange" %]
                    [% IF dispcol.show_datepicker %][% datepicker = "datepicker" %][% ELSE %][% datepicker = "" %][% END %]
                    <div class="input-group input-daterange">
                            <input type="text" name="[% field %]" class="form-control [% datepicker %] from datepicker[% dispcol.id %]" value="[% editvalue.html_form.shift | html_entity %]" 
                                [% IF NOT dispcol.show_datepicker %]placeholder="[% config.dateformat_datepicker %]"[% END %] [% readonly %]>
                            <span class="input-group-addon">to</span>
                            <input type="text" name="[% field %]" class="form-control [% datepicker %] to datepicker[% dispcol.id %]" value="[% editvalue.html_form.shift | html_entity %]"
                                [% IF NOT dispcol.show_datepicker %]placeholder="[% config.dateformat_datepicker %]"[% END %] [% readonly %]>
                    </div>
                [% ELSE %]
                    [% IF dispcol.type == "date" AND dispcol.show_datepicker %]
                        [% class = "form-control datepicker" %]
                    [% ELSIF dispcol.type == "intgr" AND editvalue.value.defined %]
                        [% class = "form-control intcalculator" %]
                    [% ELSE %]
                        [% class = "form-control" %]
                    [% END %]
                    [% IF dispcol.textbox %]
                        <textarea [%readonly %] class="form-control" id="[% dispcol.id %]" name="[% field %]" rows="10">[% IF record %][% editvalue.html %][% END %]</textarea>
                    [% ELSE %]
                        <input type="text" class="[% class %]" id="[% dispcol.id %]"
                            name="[% field %]" value="[% IF record %][% editvalue.html %][% END %]" [% readonly %]
                            [% IF dispcol.type == "date" AND NOT dispcol.show_datepicker %]placeholder="[% config.dateformat_datepicker %]"[% END %]>
                    [% END %]
                [% END %]
            </div>
            [% IF dispcol.multivalue AND dispcol.has_multivalue_plus %]
                <div class="col-md-2">
                    <a class="btn btn-primary btn-sm"><i class="fa fa-lg fa-plus cloneme" style="cursor: pointer"></i></a>
                    <a class="btn btn-primary btn-sm"><i class="fa fa-lg fa-minus removeme" style="cursor: pointer"></i></a>
                </div>
            [% END %]
        </div>
    </div>
    [% UNLESS dispcol.multivalue AND dispcol.has_multivalue_plus %]
        [% editvalue = 0 %]
    [% END %]
[% END %]

[% BLOCK do_col %]

    [%# Prevent recursive loops %]
    [% cid = col.id %]
    [% NEXT IF columns_done.$cid %]

    [%# First display the actual column, only if it doesn't depend on others,
        or it's meant to be displayed because we're within the parent %]
    [% IF !columns_done.$cid AND col.display_field == parent.id  OR NOT col.display_field %]
        [% dispcol = col %]
        [% PROCESS showcol %]
    [% END %]

    [%# Then add all the columns that depend on it. Put them in a JS code array,
        which gets output at the end of this templte. Each of these is in its own div %]
    [% IF col.display_depended_by.size %]
        [% FOREACH depends IN dispcol.display_depended_by %]
            [% divid = "depend" _ dispcol.id _ "_" _ depends.id %]
            [% IF col.multiselect AND (col.type == "enum" OR col.type == "curval") %]
                [% js_valget = '$(this).val()' %]
            [% ELSIF col.type == "enum" || col.type == "person" || col.type == "curval" %]
                [% js_valget = '$("option:selected", $(this)).text()' %]
            [% ELSE %]
                [% js_valget = '$(this).val()' %]
            [% END %]
            [% jscode.push('
                $("#' _ col.id  _ '").change( function () {
                    var val = ' _ js_valget _ ';
                    if (!val) {
                        val = "";
                    }
                    var data = decodeBase64("' _ depends.regex_b64 _ '");
                    var re = new RegExp("^" + data + "$");
                    if (re.test(val)) {
                        $("#' _ divid _ '").show()
                    } else {
                        $("#' _ divid _ '").hide()
                    }
                });
            ') %]
        [% END %]

        <div class="row">
            <div class="col-md-11 col-md-offset-1">
                [% IF col.type == "tree" %]
                    [% textval = record.fields.$cid.full_path  %]
                [% ELSE %]
                    [% textval = record.fields.$cid.as_string  %]
                [% END %]
                [% FOREACH c IN col.display_depended_by %]
                    [% FOREACH cc IN all_columns %]
                        [% IF cc.id == c.id %]
                            <div id="depend[% col.id %]_[% cc.id %]" [% UNLESS textval.match(c.regex) %]style="display:none" [% END %]>
                                [% INCLUDE do_col parent = col col = cc %]
                            </div>
                            [% jscode.push('$("#' _ col.id _ '").trigger("change");') %]
                        [% END %]
                    [% END %]
                [% END %]
            </div>
        </div>
    [% END %]
[% END %]
