[%

  header_row = {
    fields = []
  };

  config_columns = [];

  IF table_reorder_rows;
    reorderConfig = {snapX = 1};
    config_columns.push({
      name      = "Position",
      orderable = 1,
      width     = "30px",
      className = "reorder data-table__header--invisible"
    });

    header_row.fields.push({
      type   = "header",
      label  = "Position",
      filter = ""
    });
  END;

  # Create table columns and column config for each requested column
  FOREACH column in table_columns;
    columnName  = column.name || column.title || '' | html;
    columnTitle = column.title || column.name || '' | html;

    mycol = {
      name      = columnName,
      title     = columnTitle,
      orderable = column.orderable ? 1 : 0,
    };
    IF column.type; mycol.type = column.type; END;
    IF column.data; mycol.data = column.data; END;
    IF column.class; mycol.class = column.class; END;
    IF column.width; mycol.width = column.width; END;
    IF column.typeahead; mycol.typeahead = column.typeahead; END;
    IF column.typeahead_use_id; mycol.typeahead_use_id = column.typeahead_use_id; END;

    config_columns.push(mycol);

    header_row.fields.push({
      type   = "header"
      label  = column.label || column.name || ''
      filter = column.filter || ''
    });
  END;

  IF table_buttons;
    # Create table columns and column config for each button
    FOREACH button in table_buttons;
      buttonConfig = buttonConfig _ tmplColumnButtonConfig;
      config_columns.push({
        name      = "",
        orderable = 0,
        className = "min-tablet-l data-table__header--invisible",
      });
      header_row.fields.push({
        type  = "header"
        label = button.label
      });
    END;

    # add buttons to each row
    FOREACH row in rows;
      FOREACH button in table_buttons;
        row.fields.push({
          type             = button.type || "button"
          button_type      = button.button_type || "link"
          class            = button.class || ''
          button_class     = button.button_class || ''
          label            = button.label
          link             = button.link || ''
          filter           = button.filter || ''
          modalId          = button.modalId || ''
          sub_field        = button.sub_field || ''
          sub_params       = button.sub_params || row.button.sub_params || ''
          dataCurrentId    = row.modal.dataCurrentId || ''
          dataLayoutId     = row.modal.dataLayoutId || ''
          dataInstanceName = row.modal.dataInstanceName || ''
          dataTitle        = row.modal.dataTitle || ''
          dataID           = row.modal.dataID || ''
        });
      END;
    END;
  END;

  # Add column for screen overflow expand/collapse column
  config_columns.push({
    name      = "Toggle child row",
    orderable = 0,
    className = "dtr-control data-table__header--invisible",
    targets   = -1,
  });
  header_row.fields.push({
    type  = "header"
    label = "Toggle child row"
  });

  rowCounter = 1;

  FOREACH row in rows;
    fieldCounter = 1;

    FOREACH field in row.fields;
      # Add hidden fields for row reordering
      IF table_reorder_rows AND fieldCounter == 1;
        row.fields.unshift({
          type = "text",
          label = "<span>" _ rowCounter _ "</span>"
        });

        IF field.sub_field;
          tmpFields = ["fields/hidden.tt"];
          tmpParams = [{name = "position", value = row.sort_id || rowCounter}];

          tmpFields.push(field.sub_field);
          tmpParams.push(field.sub_params);

          field.sub_field_type = "array";
          field.sub_field      = tmpFields;
          field.sub_params     = tmpParams;
        ELSE;
          field.sub_field  = "fields/hidden.tt";
          field.sub_params = {
            name  = "position",
            value = row.sort_id || rowCounter
          };
        END;
      END;

      fieldCounter = fieldCounter + 1;
    END;

    # replace link placeholders
    FOREACH field IN row.fields;
      IF field.link AND row.link_placeholders AND !row.link_placeholders.empty;
        FOREACH key in row.link_placeholders.keys;
          field.link = field.link.replace('{' _ key _ '}', row.link_placeholders.$key);
        END;
      END;
      IF field.label AND row.link_placeholders AND !row.link_placeholders.empty;
        FOREACH key in row.link_placeholders.keys;
          field.label = field.label.replace('{' _ key _ '}', row.link_placeholders.$key);
        END;
      END;
    END;

    # add empty field for screen overflow expand/collapse column
    row.fields.push({type = "text"});
    rowCounter   = rowCounter + 1;
  END;

  table_config = {
    dom        = ( table_dom || '' ),
    order      = ( table_order && table_order.size ? table_order : [] ),
    ordering   = ( table_ordering.defined ? table_ordering : 1 ), # Defines if you can sort records (enabled by default)
    language   = ( table_language && table_language.size ? table_language : { emptyTable => "There is no data available in this table" } ),
    responsive = ( table_unresponsive ? 0 : { details => { type => "column", target => -1}} ),
    autoWidth  = 0,
    columns    = config_columns,
    paging     = ( table_paging.defined ? table_paging : 1 ) # Defines whether to show pagination (enabled by default)
    scrollY    = ( table_scroll_y.defined ? table_scroll_y : '' ) # Defines a fixed table height (disabled by default)
    info       = ( table_info.defined ? table_info : 1 ) # Defines whether to show table info ("showing x to y of z entries")
  };

  IF table_ajax;
    table_config.ajax = {
      url = table_ajax,
      type = "POST",
    };
    table_config.serverSide = 1;
    table_config.processing = 1;
  END;

  IF table_save_state;
    table_config.stateSave = 1;
  END;

  IF reorderConfig;
    table_config.rowReorder = reorderConfig;
  END;

  IF table_show_all_records;
    table_config.iDisplayLength = -1;
  ELSIF table_page_length;
    table_config.pageLength = table_page_length;
  END;

  IF table_length_menu == 'basic';
    table_config.lengthMenu = [10,25,50,100,200];
  ELSIF table_length_menu == 'detail';
    table_config.lengthMenu = [[5,10,25,50,-1],[5,10,25,50,"All"]];
  END;

%]

<table
  class="data-table table [% table_class %]"
  [% IF table_id %]id="[% table_id %]"[% END %]
  [% IF table_ajax AND table_ajax_target %]data-href="[% table_ajax_target %]"[% END %]
  [% IF table_destination %]data-destination="[% table_destination %]"[% END %]
  width="100%"
  data-config='[% b64_filter(table_config) %]'
>
  [% IF table_caption %]
    <caption class="sr-only">[% table_caption | html %]</caption>
  [% END %]
  <thead>
    [% INCLUDE tables/basic_row.tt row=header_row %]
  </thead>
  <tbody>
  [%
    FOREACH row IN rows;
      INCLUDE tables/basic_row.tt;
    END;
  %]
  </tbody>
  [%
    IF add_blank_footer;
      footer_row = {
      fields = []
      };
      FOREACH column in config_columns;
        footer_row.fields.push({
          label  = ''
        });
      END;
    END;
  %]
  [% IF footer_row %]
    <tfoot>
      [% INCLUDE tables/basic_row.tt row=footer_row %]
    </tfoot>
  [% END %]
</table>
