@import "~datatables.net-bs5/css/dataTables.bootstrap5.css",
"~datatables.net-responsive-bs5/css/responsive.bootstrap5.css",
"~datatables.net-rowreorder-bs5/css/rowReorder.bootstrap5.css";

table,
.table {
    // Remove default Bootstrap table accent color as it is not needed
    --bs-table-accent-bg: $transparent;
}

.data-table {
    border-spacing: 0;
    @include font-size(1rem);

    &.table-thead-hidden thead {
        display: none;
    }

    thead {
        background-color: $white;
        z-index: 1;
    }

    thead th {
        border-bottom: 1px solid $gray;
        text-transform: uppercase;
        vertical-align: top;

        &.sorting_asc,
        &.sorting_desc,
        &[aria-sort] {
            color: $brand-secundary;

            &::before,
            &::after {
                color: $brand-secundary;
            }
        }

        &.data-table__header--invisible span,
        &.dt-header--invisible span {
            @include visually-hidden;
        }
    }
}

tfoot {
    background-color: $table-hover-bg;
    font-weight: bold;
}

.dataTables_filter {
    label {
        display: flex;
        justify-content: flex-start;
    }
}

.data-table__search {
    margin: 0 0.1rem 0 -1rem;

    .dropdown-toggle {
        margin-top: 0.1rem;
        color: $gray-extra-dark;
    }

    label {
        @include input-search;
    }

    .input .form-control {
        width: auto;
    }

    .data-table__header--invisible & {
        display: none;
    }
}

th {
    div {
        padding: 0 0.5rem;
        @include flex-helper($align: flex-start, $justify: left);
    }
}

th {
    padding: 0.5rem;

    .data-table__sort {
        color: $gray-extra-dark;
        font-weight: normal;
        @include flex-helper($direction: column);
        @include font-size(0.5rem);
        margin-left: 0.5rem;

        &::before,
        &::after {
            @extend %icon-font;
        }

        &::before {
            content: '\E805';
            rotate: -90deg;
        }

        &::after {
            content: '\E805';
            rotate: 90deg;
        }
    }
}

th[aria-sort='ascending'] {
    .data-table__sort {
        &::before {
            content: '\E805';
            @include font-size(1rem);
        }

        &::after {
            content: none;
        }
    }
}

th[aria-sort='descending'] {
    .data-table__sort {
        &::before {
            content: none;
        }

        &::after {
            content: '\E805';
            @include font-size(1rem);
        }
    }
}

.btn-search {
    margin: 0;
    margin-right: 0;
    padding: 0;

    span {
        visibility: hidden;
    }

    &::before {
        content: '\E813';
        color: $gray-extra-dark;
        margin-right: 0;
    }

    &::after {
        content: none;
    }
}

div.input::after {
    content: none;
}

input[type='search'] {
    @extend .form-control;
    margin: 0.5rem;
    padding: 0.25rem 0.5rem;
    @include font-size(1rem);
}

body:has(#table-modal) {
    overflow: hidden;

    #table-modal {
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 2000;
        position: absolute;
        background: $white;
        overflow: auto;
    }
}

.dt-paging li.active button {
    background-color: $brand-secundary;
    border-color: $brand-secundary;
}

.list__value {
    table {
        --bs-table-bg: $white;
        --bs-table-striped-bg: $white;
        --bs-table-accent-bg: $transparent;
        --bs-border-color: $gray;

        tr:not(:last-of-type) {
            border-bottom: 1px solid $gray;
        }
    }
}

// This is for the header with search, length, and toggle button - specififity is important
.dt-container {
    .row {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        flex-wrap: nowrap;

        .dt-layout-start,
        .dt-layout-end {
            margin: 1rem 0.5rem;
        }

        .dt-layout-start {
            flex-grow: 1;

            .dt-search {
                width: 100%;

                label {
                    @include visually-hidden;
                }

                input {
                    @extend .form-control;
                }
            }
        }

        .dt-layout-end {
            display: flex;
            flex-direction: row;
            justify-content: flex-end;
            align-items: center;
            flex-wrap: nowrap;

            .dt-length {
                display: flex;
                flex-direction: row;
                justify-content: flex-end;
                align-items: center;
                flex-wrap: nowrap;

                label {
                    @extend .form-label;
                    white-space: nowrap;
                }

                select {
                    @extend .form-select;
                    max-width: 5rem;
                }
            }

            .dt-toggle-button {
                margin-left: 0.5rem;
            }
        }
    }
}

.dataTables_scrollBody:has(.table-toggle) {
    @include media-breakpoint-down(md) {
        /* stylelint-disable-next-line declaration-no-important */
        height: auto !important;
    }
}

.table-toggle tr[data-field-is-toggled="false"] {
    display: none;
}

.table-toggle tbody tr[data-field-is-toggled="true"]:nth-child(odd) {
    background-color: $gray-light;
}

.table> :not(caption)>*>* {
    padding: $padding-base-horizontal $padding-base-vertical;
}

.dt-empty {
    text-align: center;
    padding: 1rem;
    color: $gray-extra-dark;
}

td.dtr-control::before {
    @extend .icon;
    @extend .icon-chevron-right;
}

.reorder:not(th) {
    white-space: nowrap;

    &::before {
        @extend .icon;
        @extend .icon-reorder;
        color: rgba($gray-600, 0.5);
        cursor: move;
    }
}