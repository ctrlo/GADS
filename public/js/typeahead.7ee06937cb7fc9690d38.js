"use strict";(self.webpackChunklinkspace=self.webpackChunklinkspace||[]).push([[202],{34789:(t,e,a)=>{a.r(e),a.d(e,{default:()=>r});const i=t=>{const e=[];let a=0;return t.records.forEach((t=>{t instanceof Object?e.push({name:t.label,id:t.id}):e.push({name:t,id:a++})})),e};class TypeaheadSourceOptions{constructor(t,e,a,i,s,n){this.name=t,this.ajaxSource=e,this.mapper=a,this.appendQuery=i,this.data=s,this.dataBuilder=n}}a(67751);var s=a(6016),n=a.n(s);class Typeahead{constructor(t,e,a){this.$input=t,this.callback=e,this.sourceOptions=a,this.init()}init(){const{appendQuery:t,mapper:e,name:a,ajaxSource:i}=this.sourceOptions,s=new(n())({datumTokenizer:n().tokenizers.whitespace,queryTokenizer:n().tokenizers.whitespace,remote:{url:i+(t?"%QUERY":""),wildcard:"%QUERY",transform:t=>e(t),rateLimitBy:"debounce",rateLimitWait:300,cache:!1}});this.$input.typeahead({hint:!1,highlight:!1,minLength:1},{name:a,source:s,display:"name",limit:20,templates:{suggestion:t=>`<div>${t.name}</div>`,pending:()=>"<div>Loading...</div>",notFound:()=>"<div>No results found</div>"}}),this.$input.on("typeahead:select",((t,e)=>{this.callback(e)})),window.test&&(this.$input.on("typeahead:asyncrequest",(()=>{console.log("Typeahead async request")})),this.$input.on("typeahead:asyncreceive",(()=>{console.log("Typeahead async receive")})),this.$input.on("typeahead:asynccancel",(()=>{console.log("Typeahead async cancel")})))}}const r=class TypeaheadBuilder{constructor(){this.mapper=t=>t.map((t=>({name:t.name,id:t.id}))),this.appendQuery=!1,this.data=void 0}withInput(t){return this.$input=t,this}withCallback(t){return this.callback=t,this}withName(t){return this.name=t,this}withAjaxSource(t){return this.ajaxSource=t,this}withAppendQuery(t=!0){return this.appendQuery=t,this}withData(t){return this.dataBuilder=void 0,this.data=t,this}withMapper(t){return this.mapper=t,this}withDefaultMapper(){return this.mapper=i,this}withDataBuilder(t){return this.data=void 0,this.dataBuilder=t,this}build(){if(!this.$input)throw new Error("Input not set");if(!this.callback)throw new Error("Callback not set");if(!this.name)throw new Error("Name not set");if(!this.ajaxSource)throw new Error("Ajax source not set");const t=new TypeaheadSourceOptions(this.name,this.ajaxSource,this.mapper,this.appendQuery,this.data,this.dataBuilder);return new Typeahead(this.$input,this.callback,t)}}}}]);