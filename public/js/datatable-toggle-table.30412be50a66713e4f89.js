"use strict";(self.webpackChunklinkspace=self.webpackChunklinkspace||[]).push([[1],{47440:(e,t,o)=>{o.r(t),o.d(t,{bindToggleTableClickHandlers:()=>a,toggleRow:()=>n,toggleRowInTable:()=>s});var l=o(74692);const a=e=>{if(e.hasClass("table-toggle")){const t=e.find("tbody tr");t.off("click",n),t.on("click",n);const o=e.find("tbody btn");o.off("click",n),o.on("click",n)}},n=e=>{e.preventDefault();const t=l(e.target).closest("tr")[0],o=l(e.target).closest("table"),a=o.data("destination");s(t,o,a)},s=(e,t,o,a=null)=>{const n=l(o);if(void 0===n)return void console.error(`Failed to toggle row; missing 'toggle-destination' data attribute for table '${t.attr("id")}'`);const s=e.dataset.toggleFieldIdSelector+e.dataset.toggleFieldId,d=n.DataTable().row(s);if(0==d.length)return void console.error(`Failed to toggle row; missing row ${s} in table ${o}`);const i=e.querySelector("input");i&&("boolean"==typeof a?i.checked=!a:i.checked^=1);const c=d.node().querySelector("input");c&&("boolean"==typeof a?c.checked=a:c.checked^=1);const r=d.node().dataset.fieldIsToggled;r&&(d.node().dataset.fieldIsToggled="boolean"==typeof a?a.toString():"true"==r?"false":"true");const g=e.dataset.fieldIsToggled;void 0!==g&&(e.dataset.fieldIsToggled="boolean"==typeof a?!a.toString():"true"==g?"false":"true")}}}]);