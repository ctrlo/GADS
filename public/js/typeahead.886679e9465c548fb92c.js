"use strict";(self.webpackChunklinkspace=self.webpackChunklinkspace||[]).push([[202],{34789:(t,e,i)=>{i.r(e),i.d(e,{default:()=>o});const a=t=>{const e=[];let i=0;return t.records.forEach((t=>{t instanceof Object?e.push({name:t.label,id:t.id}):e.push({name:t,id:i++})})),e};class s{constructor(t,e,i,a,s,n){this.name=t,this.ajaxSource=e,this.mapper=i,this.appendQuery=a,this.data=s,this.dataBuilder=n}}i(67751);var n=i(6016),r=i.n(n);class h{constructor(t,e,i){this.$input=t,this.callback=e,this.sourceOptions=i,this.init()}init(){const{appendQuery:t,mapper:e,name:i,ajaxSource:a}=this.sourceOptions,s=new(r())({datumTokenizer:r().tokenizers.whitespace,queryTokenizer:r().tokenizers.whitespace,remote:{url:a+(t?"%QUERY":""),wildcard:"%QUERY",transform:t=>e(t),rateLimitBy:"debounce",rateLimitWait:300,cache:!1}});this.$input.typeahead({hint:!1,highlight:!1,minLength:1},{name:i,source:s,display:"name",limit:20,templates:{suggestion:t=>`<div>${t.name}</div>`,pending:()=>"<div>Loading...</div>",notFound:()=>"<div>No results found</div>"}}),this.$input.on("typeahead:select",((t,e)=>{this.callback(e)})),window.test&&(this.$input.on("typeahead:asyncrequest",(()=>{console.log("Typeahead async request")})),this.$input.on("typeahead:asyncreceive",(()=>{console.log("Typeahead async receive")})),this.$input.on("typeahead:asynccancel",(()=>{console.log("Typeahead async cancel")})))}}const o=class{constructor(){this.mapper=t=>t.map((t=>({name:t.name,id:t.id}))),this.appendQuery=!1,this.data=void 0}withInput(t){return this.$input=t,this}withCallback(t){return this.callback=t,this}withName(t){return this.name=t,this}withAjaxSource(t){return this.ajaxSource=t,this}withAppendQuery(t=!0){return this.appendQuery=t,this}withData(t){return this.dataBuilder=void 0,this.data=t,this}withMapper(t){return this.mapper=t,this}withDefaultMapper(){return this.mapper=a,this}withDataBuilder(t){return this.data=void 0,this.dataBuilder=t,this}build(){if(!this.$input)throw new Error("Input not set");if(!this.callback)throw new Error("Callback not set");if(!this.name)throw new Error("Name not set");if(!this.ajaxSource)throw new Error("Ajax source not set");const t=new s(this.name,this.ajaxSource,this.mapper,this.appendQuery,this.data,this.dataBuilder);return new h(this.$input,this.callback,t)}}}}]);