"use strict";(self.webpackChunklinkspace=self.webpackChunklinkspace||[]).push([[202],{34789:(t,e,a)=>{a.r(e),a.d(e,{default:()=>h});const i=t=>{const e=[];let a=0;return t.records.forEach((t=>{t instanceof Object?e.push({name:t.label,id:t.id}):e.push({name:t,id:a++})})),e};class TypeaheadSourceOptions{constructor(t,e,a,i,s,r,n="GET"){this.name=t,this.ajaxSource=e,this.mapper=a,this.appendQuery=i,this.data=s,this.dataBuilder=r,this.method=n}}a(67751);var s=a(6016),r=a.n(s),n=a(74692);class Typeahead{constructor(t,e,a){this.$input=t,this.callback=e,this.sourceOptions=a,this.init()}init(){const{data:t,appendQuery:e,mapper:a,name:i,ajaxSource:s,method:h}=this.sourceOptions,o=new(r())({datumTokenizer:r().tokenizers.whitespace,queryTokenizer:r().tokenizers.whitespace,remote:{url:s+(e?"%QUERY":""),wildcard:"%QUERY",transform:t=>a(t),rateLimitBy:"debounce",rateLimitWait:300,cache:!1,transport:(e,a,i)=>{e.type=h,e.data=t||(this.sourceOptions.dataBuilder?this.sourceOptions.dataBuilder():void 0),n.ajax(e).done(a).fail(((t,e,a)=>{console.error("Typeahead ajax request failed:",e,a,t.responseText),i(a)}))}}});this.$input.typeahead({hint:!1,highlight:!1,minLength:1},{name:i,source:o,display:"name",limit:20,templates:{suggestion:t=>`<div>${t.name}</div>`,pending:()=>"<div>Loading...</div>",notFound:()=>"<div>No results found</div>"}}),this.$input.on("typeahead:select",((t,e)=>{this.callback(e)})),window.test&&(this.$input.on("typeahead:asyncrequest",(()=>{console.log("Typeahead async request")})),this.$input.on("typeahead:asyncreceive",(()=>{console.log("Typeahead async receive")})),this.$input.on("typeahead:asynccancel",(()=>{console.log("Typeahead async cancel")})))}}const h=class TypeaheadBuilder{constructor(){this.mapper=t=>t.map((t=>({name:t.name,id:t.id}))),this.method="GET",this.appendQuery=!1,this.data=void 0}withMethod(t="GET"){if("GET"!==t&&"POST"!==t)throw new Error("Method must be either 'GET' or 'POST'");return this.method=t,this}withInput(t){return this.$input=t,this}withCallback(t){return this.callback=t,this}withName(t){return this.name=t,this}withAjaxSource(t){return this.ajaxSource=t,this}withAppendQuery(t=!0){return this.appendQuery=t,this}withData(t){return this.dataBuilder=void 0,this.data=t,this}withMapper(t){return this.mapper=t,this}withDefaultMapper(){return this.mapper=i,this}withDataBuilder(t){return this.data=void 0,this.dataBuilder=t,this}build(){if(!this.$input)throw new Error("Input not set");if(!this.callback)throw new Error("Callback not set");if(!this.name)throw new Error("Name not set");if(!this.ajaxSource)throw new Error("Ajax source not set");const t=new TypeaheadSourceOptions(this.name,this.ajaxSource,this.mapper,this.appendQuery,this.data,this.dataBuilder,this.method);return new Typeahead(this.$input,this.callback,t)}}}}]);